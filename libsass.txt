{{/*  asign the path to the $targetPath variable  */}}
{{ $targetPath := . }}
{{ println "El valor de myVar es: " $targetPath }} <br>

{{/*  check for "scss/" or "sass/" at the start and ".scss" or ".sass" at the end of the targetPath  */}}
{{ if and ( hasPrefix $targetPath (or "scss/" "sass/")) (strings.HasSuffix $targetPath (or ".scss" ".sass")) }}
    {{/*  return the string but starting at the 6th characater and removing the las 5 characters  */}}
    {{ $targetPath = substr $targetPath 5 -5 }}

    {{/*  print a new target path -- se asigna la variable targetPath al marcador %s   */}}
    {{  $targetPath = printf "css/%s.css" $targetPath }}

{{ end }}
{{/* ? Estamos utilizando comandos que nos permiten ver en el navegador el mapa de la fuente para tener mayor orden, esto es util en desarrollo  */}}
{{/*  sass options common to dev and production  */}}
{{ $commonOpts := (dict "transpiler" "libsass" "targetPath" $targetPath "includePaths" (slice "node_modules")) }}
{{/*  development options  */}}
{{ $opts := merge $commonOpts (dict "outputStyle" "compressed") }}
{{/*  production options   */}}
{{ if eq hugo.Environment "development" }}
  {{ $opts = merge $commonOpts (dict "enableSourceMap" true) }}
{{ end }}

{{/* ? Colocamos el punto solo para pasar por ahi el contexto que desamos cuando usemos el parcial, en este caso en el head  */}}
{{ $css := resources.Get . }}
{{ $css = $css | toCSS $opts }}

{{ println "El pernalink: " $css.RelPermalink }} <br>

<link rel="stylesheet" href="{{ $css.RelPermalink }}"> 